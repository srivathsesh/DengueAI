library(skimr)
library(forecast)
library(lubridate)
library(xts)
library(astsa)
library(caret)
train <- read_csv("Training.csv")
skim(train)
skim_with(numeric= list(hist= NULL),integer = list(hist = NULL))
pander::pander(skim(train))
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5)
acf2(train$total_cases)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(magrittr)
library(tidyverse)
library(skimr)
library(forecast)
library(lubridate)
library(xts)
library(astsa)
library(caret)
abs(predict(out,type = "coefficients",s=cv.out$lambda.min))
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(magrittr)
library(tidyverse)
library(skimr)
library(forecast)
library(lubridate)
library(xts)
library(astsa)
library(caret)
train <- read_csv("Training.csv")
test <- read_csv("DengAI_Predicting_Disease_Spread_-_Test_Data_Features.csv")
skim_with(numeric= list(hist= NULL),integer = list(hist = NULL))
pander::pander(skim(train))
# Show missing values
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5)
# Split data by city
trainSJ <- train %>% dplyr::filter(city == "sj")
trainIQ <- train %>% dplyr::filter(city == "iq")
trainImputedSj <- VIM::kNN(trainSJ[, -5])
trainImputedIq <- VIM::kNN(trainIQ[, -5])
trainImputedSj %<>% mutate(week_start_date = lubridate::mdy(week_start_date),
total_cases = trainSJ$total_cases)
trainImputedIq %<>% mutate(week_start_date = lubridate::mdy(week_start_date),
total_cases = trainIQ$total_cases)
par(mfrow = c(2,1))
tsplot(trainImputedSj$total_cases~trainImputedSj$week_start_date, main = "Dengue reported cases in San Juan", ylab = "Total cases")
tsplot(trainImputedIq$total_cases~trainImputedIq$week_start_date, main = "Dengue reported cases in Iquitos", ylab = "Total cases")
plot(trainImputedSj$ndvi_ne~trainImputedSj$week_start_date, col = ifelse(trainImputedSj$ndvi_ne_imp == T,"red", "black"),type = "b")
plot(trainImputedIq$ndvi_ne~trainImputedIq$week_start_date, col = ifelse(trainImputedIq$ndvi_ne_imp == T,"red", "black"), type = "b")
plot(trainImputedSj$ndvi_nw~trainImputedSj$week_start_date, col = ifelse(trainImputedSj$ndvi_nw_imp == T,"red", "black"),type = "b")
plot(trainImputedIq$ndvi_nw~trainImputedIq$week_start_date, col = ifelse(trainImputedIq$ndvi_nw_imp == T,"red", "black"), type = "b")
plot(trainImputedSj$station_avg_temp_c~trainImputedSj$week_start_date, col = ifelse(trainImputedSj$station_avg_temp_c_imp == T,"red", "black"),type = "b")
plot(trainImputedIq$station_avg_temp_c~trainImputedIq$week_start_date, col = ifelse(trainImputedIq$station_avg_temp_c_imp == T,"red", "black"),type = "b",lty = 1,lwd = 0.5, cex = 0.5)
cormatSj <-  trainImputedSj %>%
select_if(is.numeric) %>%
cor(.)
corrplot::corrplot(cormatSj,method = 'ellipse',tl.cex = 0.6,order = "hclust")
cormatIq <- trainImputedIq %>%
select_if(is.numeric) %>% cor(.)
corrplot::corrplot(cormatIq, method = 'ellipse',tl.cex = 0.6, order = 'hclust')
HighCorIq <- findCorrelation(cormatIq, names = T)
HighCorSj <- findCorrelation(cormatSj, names = T)
trainImputedSj %<>%
select(-city,-Year.Week) %>%
select(-one_of(!!HighCorSj)) %>%
select(-ends_with("imp"))
#ccf2(trainImputedSj$total_cases,trainImputedSj$reanalysis_specific_humidity_g_per_kg,max.lag = 15)
#train <- train %>% mutate(index = 1:nrow(.))
colnames(trainImputedSj)
newRF <- rfFuncs
varSeq <- seq(1,15,by = 2)
ctrl <- rfeControl(method = "repeatedcv",
repeats = 5,
verbose = T,
functions = rfFuncs,
allowParallel = T)
rfRFE <- rfe(x = trainImputedSj[,c(-1:-3,-19)],
y = trainImputedSj$total_cases,
sizes = varSeq,
metric = "RMSE",
rfeControl = ctrl,
ntree = 500)
#ntree = 1000)
rfRFE
astsa::acf2(trainImputedSj$total_cases[trainImputedSj$year >= 1996])
fit <- astsa::sarima(trainImputedSj$total_cases,p = 1,d = 1, q = 1)
plot(fit$fit$residuals)
auto.arima(trainImputedSj$total_cases[trainImputedSj$year >= 1995])
rfRFE_timeEffect <- rfe(x = trainImputedSj[,c(-1:-3,-19)],
y = fit$fit$residuals,
sizes = varSeq,
metric = "RMSE",
rfeControl = ctrl,
ntree = 500)
rfRFE_timeEffect
x <- model.matrix(total_cases ~ ., data = trainImputedSj[,-1:-3])[,-1]
cv.out <- glmnet::cv.glmnet(x,y = trainImputedSj$total_cases, family = "poisson", alpha = 1)
out <- glmnet::glmnet(x,trainImputedSj$total_cases, family = 'poisson',lambda = cv.out$lambda.min, alpha = 1)
abs(predict(out,type = "coefficients",s=cv.out$lambda.min))
astsa::acf2(trainImputedSj$total_cases[trainImputedSj$year >= 1996])
fit <- astsa::sarima(trainImputedSj$total_cases,p = 1,d = 1, q = 1)
plot(fit$fit$residuals)
fit <- astsa::sarima(trainImputedSj$total_cases,p = 1,d = 1, q = 1)
rfRFE_timeEffect
auto.arima(trainImputedSj$total_cases[trainImputedSj$year >= 1995])
astsa::acf2(trainImputedSj$total_cases[trainImputedSj$year >= 1996])
auto.arima(trainImputedSj$total_cases[trainImputedSj$year >= 1995],stepwise = F)
cv.out <- glmnet::cv.glmnet(x,y = fit$fit$residuals, family = "poisson", alpha = 1)
hiat(fit$fit$residuals)
hist(fit$fit$residuals)
fit <- astsa::sarima(trainImputedSj$total_cases,p = 1,d = 1, q = 1)
auto.arima(trainImputedSj$total_cases[trainImputedSj$year >= 1995],stepwise = F)
Box.test(fit$fit$residuals)
tseries::adf.test(trainImputedSj$total_cases)
tseries::adf.test(trainImputedSj$total_cases,alternative = "s")
cv.out <- glmnet::cv.glmnet(x,y = fit$fit$residuals, alpha = 1)
cv.out <- glmnet::cv.glmnet(x= trainImputedSj[,c(-1:-3,-19)],y = fit$fit$residuals, alpha = 1)
cv.out <- glmnet::cv.glmnet(x,y = fit$fit$residuals, alpha = 1)
cv.out <- glmnet::cv.glmnet(x = trainImputedSj[,c(-1:-3,-19)],y = fit$fit$residuals, alpha = 1)
dim(fit$fit$residuals)
length(fit$fit$residuals)
dim(trainImputedSj)
length(fit$fit$residuals)
dim(trainImputedSj)
class(fit$fit$residuals)
dim(trainImputedSj)
cv.out <- glmnet::cv.glmnet(x = trainImputedSj[,c(-1:-3,-19)],y = as.numeric(fit$fit$residuals), alpha = 1)
model.matrix(total_cases ~ ., trainImputedSj[,c(-1:-3)])[-1]
model.matrix(total_cases ~ ., trainImputedSj[,c(-1:-3)])[,-1]
cv.out <- glmnet::cv.glmnet(x = model.matrix(total_cases ~ ., trainImputedSj[,c(-1:-3)])[,-1],y = as.numeric(fit$fit$residuals), alpha = 1)
out <- glmnet::glmnet(x,trainImputedSj$total_cases,lambda = cv.out$lambda.min, alpha = 1)
abs(predict(out,type = "coefficients",s=cv.out$lambda.min))
plot(predict(out,type = "coefficients",s=cv.out$lambda.min))
abs(predict(out,type = "coefficients",s=cv.out$lambda.min))
topPredLasso <- abs(predict(out,type = "coefficients",s=cv.out$lambda.min))
topPredLasso
data.frame(topPredLasso)x
as.data.frame(topPredLasso)x
data.frame(topPredLasso)
as.data.frame(topPredLasso)
topPredLasso@factors
topPredLasso@factors
topPredLasso@Dimnames
topPredLasso@x
topPredLasso
topPredLasso@x
topPredLasso@Dimnames
topPredLasso@p
topPredLasso@i
topPredLasso@Dimnames[[i]][topPredLasso@i]
topPredLasso@Dimnames[[1]][topPredLasso@i]
topPredLasso
topPredLasso@Dimnames[[1]][topPredLasso@i]
topPredLasso
topPredLasso@Dimnames[[1]][topPredLasso@i]
topPredLasso@Dimnames[[1]][topPredLasso@i]
topPredLasso@i
topPredLasso
topPredLasso@factors
topPredLasso@Dim
topPredLasso@Dimnames
topPredLasso@Dimnames[[1]][topPredLasso@i-1]
topPredLasso@Dimnames[[1]][topPredLasso@i+1]
topPredLasso@x
topPredL <- data.frame(Predictors = topPredLasso@Dimnames[[1]][topPredLasso@i+1],
Coefs = topPredLasso@x)
topPredL <
topPredL
topPredL
topPredL <- data.frame(Predictors = topPredLasso@Dimnames[[1]][topPredLasso@i+1],
Coefs = topPredLasso@x) %>% arrange(desc(Coef))
topPredL %>% arrange(desc(Coef))
topPredL <- data.frame(Predictors = topPredLasso@Dimnames[[1]][topPredLasso@i+1],
Coefs = topPredLasso@x)
topPredL %>% arrange(desc(Coef))
topPredL
topPredL %>% arrange(desc(Coefs))
topPredL %>% arrange(desc(Coefs))[-1]
topPredL %>% arrange(desc(Coefs))
topPredL %>% arrange(desc(Coefs)) %>% select(!Predictors == "(Intercept)")
topPredL %>% arrange(desc(Coefs))
topPredL %>% arrange(desc(Coefs)) %>% filter(!Predictors == "(Intercept)")
rfRFE_timeEffect
rfRFE_timeEffect$bestSubset
rfRFE_timeEffect$pred
rfRFE_timeEffect$optVariables
rfRFE_timeEffect
rfRFE_timeEffect$optVariables
tsTotalcasesSj <- zoo::zoo(trainImputedSj$total_cases)
tsTotalcasesSj <- zoo::zoo(trainImputedSj$total_cases,
frequency = 52)
tsTotalcasesSj
seasonal(tsTotalcasesSj)
tsTotalcasesSj <- ts(trainImputedSj$total_cases, start = c(1990,18), frequency = 52)
tsTotalcasesSj
View(trainImputedSj)
seasonal(tsTotalcasesSj)
tsTotalcasesSj <- ts(trainImputedSj$total_cases, start = c(1990,18), frequency = 52)
seasonal(tsTotalcasesSj)
ggseasonplot(tsTotalcasesSj)
tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
head(tsTrainImputedSj)
ggseasonplot(tsTrainImputedSj$reanalysis_max_air_temp_k)
xts::periodicity(tsTrainImputedSj)
xts::periodicity(tsTrainImputedSj$total_cases)
tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date)
xts::periodicity(tsTrainImputedSj)
tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
plot.xts(tsTrainImputedSj)
plot.xts(tsTrainImputedSj$total_cases)
plot.xts(as.ts(tsTrainImputedSj$total_cases))
ggseasonplot(as.ts(tsTrainImputedSj$total_cases))
ggseasonplot(ts(trainImputedSj$reanalysis_tdtr_k, start = c(1990,18), frequency = 52))
colnames(trainImputedSj)
ggseasonplot(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52))
ggseasonplot(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52))
ggseasonplot(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52))
forecast::tsdisplay(tsTrainImputedSj$total_cases)
forecast::tsdisplay(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52))
forecast::nsdiffs(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52))
forecast::ndiffs(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52))
nsdiffs(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52),m = 52)
plot(diff(trainImputedSj$reanalysis_max_air_temp_k,lag = 1))
plot(diff(trainImputedSj$reanalysis_max_air_temp_k,lag = 1), type = "l")
plot(diff(trainImputedSj$reanalysis_max_air_temp_k,lag = 52), type = "l")
plot(diff(trainImputedSj$reanalysis_max_air_temp_k,lag = 26), type = "l")
plot(diff(trainImputedSj$reanalysis_max_air_temp_k,lag = 2), type = "l")
plot(diff(trainImputedSj$reanalysis_max_air_temp_k,lag = 1), type = "l")
install.packages("dyn")
library(lattice)
data(baltimore)
xyplot(baltimore)
cor(baltimore)
xyplot(elect + gas ~ temp,
data = as.data.frame(baltimore), pch = 20, auto.key = TRUE)
library(dyn)
library(lattice)
data(baltimore)
xyplot(baltimore)
cor(baltimore)
xyplot(elect + gas ~ temp,
data = as.data.frame(baltimore), pch = 20, auto.key = TRUE)
baltimore
y <- ts(1:12, start = c(2000,2), freq = 4)^3
x <- ts(1:9, start = c(2000,3), freq = 4)^2
y.lm <- dyn$lm( window(y, start = c(2000,4)) ~ diff(x) )
y.lm
summary(y.lm)
yz <- zoo(rnorm(100)); xz <- zoo(rnorm(100))
yz.lm <- dyn$lm(yz ~ lag(xz, 0:-3))
yz.lm <- dyn$lm(yz ~ lag(xz, 0:3))
yz
xz
lag(xz, 0:-3)
stats::lag(xz, 0:-3)
yz.lm <- dyn$lm(yz ~ stats::lag(xz, 0:3))
yz.lm <- dyn$lm(yz ~ stats::lag(xz, 0:-3))
summary(yz.lm)
lm(yz ~ stats::lag(xz,0:3))
nsdiffs(tsTrainImputedSj$total_cases, m = 52)
nsdiffs(baltimore$therms)
nsdiffs(baltimore$therms,m = 12)
ndiffs(baltimore$therms,m = 12)
plot(baltimore$therms)
head(sunspots)
plot(sunspots)
ndiffs(sunspots)
nsdiffs(sunspots)
diff(sunspots)
plot(diff(sunspots))
plot(head(diff(sunspots)))
plot(head(diff(sunspots),10))
plot(head(diff(sunspots),20))
plot(tsTrainImputedSj$reanalysis_tdtr_k)
plot(baltimore$therms)
tsTrainImputedSj <- zoo::zoo(tsTrainImputedSj, order.by = tsTrainImputedSj$week_start_date, frequency = 52)
plot(tsTrainImputedSj$station_precip_mm)
tsTrainImputedSj <- zoo::zoo(trainImputedSj, frequency = 52)
plot(tsTrainImputedSj$station_precip_mm)
tsTrainImputedSj[,"Week"]
tsTrainImputedSj[,"week_start_data"]
tsTrainImputedSj <- trainImputedIq %>% select(-1:-3)
tsTrainImputedSj <-  xts::xts(tsTrainImputedSj, order.by = trainImputedSj$week_start_date)
dim(tsTrainImputedSj)
dim(trainImputedSj)
trainImputedIq %>% select(-1) M %>% names()
trainImputedIq %>% select(-1) M %>% names(.)
trainImputedIq %>% select(-1)  %>% names(.)
tsTrainImputedSj <- trainImputedSj %>% select(-1:-3)
dim(tsTrainImputedSj)
tsTrainImputedSj <-  xts::xts(tsTrainImputedSj, order.by = trainImputedSj$week_start_date)
head(tsTrainImputedSj)
tsTrainImputedSj <-  xts::xts(tsTrainImputedSj, order.by = trainImputedSj$week_start_date,frequency = 52)
head(tsTrainImputedSj)
plot(trainImputedSj$total_cases)
plot(trainImputedSj$total_cases, tyle = "l")
plot(trainImputedSj$total_cases, type = "l")
autoplot.zoo(trainImputedSj$total_cases)
autoplot.zoo(trainImputedSj$reanalysis_max_air_temp_k)
autoplot.zoo(diff(trainImputedSj$reanalysis_max_air_temp_k))
autoplot.zoo(head(diff(trainImputedSj$reanalysis_max_air_temp_k),20))
autoplot.zoo(head(diff(trainImputedSj$reanalysis_max_air_temp_k),20))
autoplot.zoo(head(diff(trainImputedSj$reanalysis_max_air_temp_k),40))
autoplot.zoo(head(diff(trainImputedSj$reanalysis_max_air_temp_k),60))
seasonplot(diff(trainImputedSj$reanalysis_max_air_temp_k))
xts::periodicity(diff(trainImputedSj$reanalysis_max_air_temp_k))
xts::periodicity(trainImputedSj$reanalysis_max_air_temp_k)
acf2(iff(trainImputedSj$reanalysis_max_air_temp_k))
acf2(diff(trainImputedSj$reanalysis_max_air_temp_k))
Box.test(diff(trainImputedSj$reanalysis_max_air_temp_k))
Box.test(diff(trainImputedSj$reanalysis_max_air_temp_k,52))
Box.test(diff(trainImputedSj$reanalysis_max_air_temp_k,2))
Box.test(diff(trainImputedSj$reanalysis_max_air_temp_k,26))
acf2(trainImputedSj$reanalysis_max_air_temp_k)
acf2(diff(trainImputedSj$reanalysis_max_air_temp_k))
acf2(lag(diff(trainImputedSj$reanalysis_max_air_temp_k)))
auto.arima(trainImputedSj$reanalysis_max_air_temp_k)
auto.arima(trainImputedSj$reanalysis_max_air_temp_k, stepwise = F)
acf2(lag(diff(trainImputedSj$reanalysis_max_air_temp_k)))
Box.test(lag(diff(trainImputedSj$reanalysis_max_air_temp_k)))
acf2(diff(trainImputedSj$reanalysis_max_air_temp_k,4))
acf2(diff(trainImputedSj$reanalysis_max_air_temp_k,26))
acf2(diff(trainImputedSj$reanalysis_max_air_temp_k,52))
ccf2(diff(trainImputedSj$reanalysis_max_air_temp_k))
ac2(trainImputedSj$reanalysis_max_air_temp_k)
acf2(trainImputedSj$reanalysis_max_air_temp_k)
acf2(diff(trainImputedSj$reanalysis_max_air_temp_k,4))
acf2(diff(trainImputedSj$reanalysis_max_air_temp_k,2))
plot(diff(trainImputedSj$reanalysis_max_air_temp_k,2))
plot(diff(trainImputedSj$reanalysis_max_air_temp_k,2),type = "l")
auto.arima(trainImputedSj$reanalysis_max_air_temp_k)
sarima(trainImputedSj,p = 4, d= 1, q = 4)
sarima(trainImputedSj$reanalysis_max_air_temp_k,p = 4, d= 1, q = 4)
sarima(trainImputedSj$reanalysis_max_air_temp_k,p = 1, d= 1, q = 1)
sarima(trainImputedSj$reanalysis_max_air_temp_k,p = 1, d= 1, q = 1)
sarima(trainImputedSj$reanalysis_max_air_temp_k,p = 1, d= 1, q = 1)
sarima(trainImputedSj,p = 4, d= 1, q = 4)
sarima(trainImputedSj$total_cases,p = 4, d= 1, q = 4)
sarima(trainImputedSj$total_cases,p = 1, d= 1, q = 1)
Arima(trainImputedSj$total_cases, order = c(1,1,1))
sarima(trainImputedSj$total_cases,p=1,d=1,q=1)
sarima(s(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52),p=1,d=1,q=1)
sarima(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52),p=1,d=1,q=1)
sarima(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52),p=1,d=1,q=1)
sarima(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52),p=1,d=1,q=4)
auto.arima(tsTrainImputedSj$reanalysis_max_air_temp_k)
auto.arima(tsTrainImputedSj$reanalysis_max_air_temp_k,stepwise = F)
sarima(tsTrainImputedSj$reanalysis_max_air_temp_k,p=1,d=1,q=3)
sarima(tsTrainImputedSj$reanalysis_max_air_temp_k,p=1,d=1,q=0)
sarima(tsTrainImputedSj$reanalysis_max_air_temp_k,p=1,d=1,q=1)
sarima(tsTrainImputedSj$reanalysis_max_air_temp_k,p=1,d=1,q=2)
sarima(tsTrainImputedSj$reanalysis_max_air_temp_k,p=1,d=1,q=3)
rfRFE_timeEffect$optVariables
rfRFE_timeEffect
rf_predictors <- c('station_avg_temp_c', 'reanalysis_min_air_temp_k', 'reanalysis_relative_humidity_percent', 'station_precip_mm', 'reanalysis_max_air_temp_k')
base::intersect(rf_predictors,topPredL$Predictors)
rfRFE
rf_predictors2 <- c('reanalysis_relative_humidity_percent', 'reanalysis_precip_amt_kg_per_m2', 'reanalysis_max_air_temp_k', 'station_avg_temp_c, ndvi_ne')
x <- model.matrix(total_cases ~ ., data = trainImputedSj[,-1:-3])[,-1]
cv.out <- glmnet::cv.glmnet(x,y = trainImputedSj$total_cases, family = "poisson", alpha = 1)
plot(cv.out)
out <- glmnet::glmnet(x,trainImputedSj$total_cases, family = 'poisson',lambda = cv.out$lambda.min, alpha = 1)
topPredLasso_PresentTime <- abs(predict(out,type = "coefficients",s=cv.out$lambda.min))
plot(predict(out,type = "coefficients",s=cv.out$lambda.min))
topPredL_presentTime <- data.frame(Predictors = topPredLasso_PresentTime@Dimnames[[1]][topPredLasso_PresentTime@i+1],
Coefs = topPredLasso_PresentTime@x)
topPredL_presentTime
topPredL_presentTime %>% arrange(desc(Coefs)) %>% filter(!Predictors == "(Intercept)")
rf_predictors2
topPredL_presentTime %<>% arrange(desc(Coefs)) %>% filter(!Predictors == "(Intercept)")
topPredL_presentTime
base::intersect(rf_predictors2,topPredL_presentTime)
base::intersect(rf_predictors2,topPredL_presentTime$Predictors)
topPredL %<>% arrange(desc(Coefs)) %>% filter(!Predictors == "(Intercept)")
topPredL
base::intersect(rf_predictors,topPredL$Predictors)
colnames(trainImputedSj)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(magrittr)
library(tidyverse)
library(skimr)
library(forecast)
library(lubridate)
library(xts)
library(astsa)
library(caret)
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5)
train <- read_csv("Training.csv")
test <- read_csv("DengAI_Predicting_Disease_Spread_-_Test_Data_Features.csv")
skim_with(numeric= list(hist= NULL),integer = list(hist = NULL))
pander::pander(skim(train))
# Show missing values
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5)
trainSJ <- train %>% dplyr::filter(city == "sj")
trainIQ <- train %>% dplyr::filter(city == "iq")
trainImputedSj <- VIM::kNN(trainSJ[, -5])
trainImputedIq <- VIM::kNN(trainIQ[, -5])
trainImputedSj %<>% mutate(week_start_date = lubridate::mdy(week_start_date),
total_cases = trainSJ$total_cases)
trainImputedIq %<>% mutate(week_start_date = lubridate::mdy(week_start_date),
total_cases = trainIQ$total_cases)
par(mfrow = c(2,1))
tsplot(trainImputedSj$total_cases~trainImputedSj$week_start_date, main = "Dengue reported cases in San Juan", ylab = "Total cases")
tsplot(trainImputedIq$total_cases~trainImputedIq$week_start_date, main = "Dengue reported cases in Iquitos", ylab = "Total cases")
plot(trainImputedSj$ndvi_ne~trainImputedSj$week_start_date, col = ifelse(trainImputedSj$ndvi_ne_imp == T,"red", "black"),type = "b")
plot(trainImputedIq$ndvi_ne~trainImputedIq$week_start_date, col = ifelse(trainImputedIq$ndvi_ne_imp == T,"red", "black"), type = "b")
plot(trainImputedSj$ndvi_nw~trainImputedSj$week_start_date, col = ifelse(trainImputedSj$ndvi_nw_imp == T,"red", "black"),type = "b")
plot(trainImputedIq$ndvi_nw~trainImputedIq$week_start_date, col = ifelse(trainImputedIq$ndvi_nw_imp == T,"red", "black"), type = "b")
plot(trainImputedSj$station_avg_temp_c~trainImputedSj$week_start_date, col = ifelse(trainImputedSj$station_avg_temp_c_imp == T,"red", "black"),type = "b")
plot(trainImputedIq$station_avg_temp_c~trainImputedIq$week_start_date, col = ifelse(trainImputedIq$station_avg_temp_c_imp == T,"red", "black"),type = "b",lty = 1,lwd = 0.5, cex = 0.5)
cormatSj <-  trainImputedSj %>%
select_if(is.numeric) %>%
cor(.)
corrplot::corrplot(cormatSj,method = 'ellipse',tl.cex = 0.6,order = "hclust")
cormatIq <- trainImputedIq %>%
select_if(is.numeric) %>% cor(.)
corrplot::corrplot(cormatIq, method = 'ellipse',tl.cex = 0.6, order = 'hclust')
HighCorIq <- findCorrelation(cormatIq, names = T)
HighCorSj <- findCorrelation(cormatSj, names = T)
HighCorSj
tsTotalcasesSj <- ts(trainImputedSj$total_cases, start = c(1990,18), frequency = 52)
ggseasonplot(tsTotalcasesSj)
tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
ggseasonplot(tsTrainImputedSj$reanalysis_max_air_temp_k)
ggseasonplot(tsTotalcasesSj)
# make data a time series object
tsTrainImputedSj <-  xts::xts(trainImputedSj[,-1:-5],order.by = trainImputedSj$week_start_date, frequency = 52)
#tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
ggseasonplot(tsTrainImputedSj$reanalysis_max_air_temp_k)
head(tsTrainImputedSj)
#tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
ggseasonplot(ts(tsTrainImputedSj$reanalysis_max_air_temp_k))
#tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
ggseasonplot(tsTrainImputedSj$reanalysis_relative_humidity_percent)
#tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
autoplot(tsTrainImputedSj$reanalysis_relative_humidity_percent)
#tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
ggseasonplot(ts(tsTrainImputedSj$reanalysis_relative_humidity_percent,start = c(1990,18), frequency = 52))
#tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
ggseasonplot(ts(tsTrainImputedSj$reanalysis_relative_humidity_percent,start = c(1990,18), frequency = 52)) + theme_classic()
#tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
ggseasonplot(ts(tsTrainImputedSj$reanalysis_relative_humidity_percent,start = c(1990,18), frequency = 52)) + theme_classic() +theme(legend.position = "none")
#tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
ggseasonplot(ts(tsTrainImputedSj$reanalysis_relative_humidity_percent,start = c(1990,18), frequency = 52)) + theme_classic() +theme(legend.position = "none") + ggtitle("Reanalysis_relative_humidity_%")
#tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
ggseasonplot(ts(tsTrainImputedSj$reanalysis_relative_humidity_percent,start = c(1990,18), frequency = 52)) + theme_classic() +theme(legend.position = "none",plot.title = element_text(hjust = 0.5)) + ggtitle("Reanalysis_relative_humidity_%")
#tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
ggseasonplot(ts(tsTrainImputedSj$reanalysis_relative_humidity_percent,start = c(1990,18), frequency = 52)) + theme_classic() +theme(legend.position = "none",plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size = 1)) + ggtitle("Reanalysis_relative_humidity_%")
#tsTrainImputedSj <-  xts(trainImputedSj,order.by = trainImputedSj$week_start_date, frequency = 52)
ggseasonplot(ts(tsTrainImputedSj$reanalysis_relative_humidity_percent,start = c(1990,18), frequency = 52)) + theme_classic() +theme(legend.position = "none",plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size = 5)) + ggtitle("Reanalysis_relative_humidity_%")
ggseasonplot(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52)) + + theme_classic() +theme(legend.position = "none",plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size = 5)) + ggtitle("Reanalysis_max_air_temp_")
ggseasonplot(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52)) + + theme_classic() + theme(legend.position = "none",plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size = 5)) + ggtitle("Reanalysis_max_air_temp_")
ggseasonplot(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52)) +  theme_classic() + theme(legend.position = "none",plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size = 5)) + ggtitle("Reanalysis_max_air_temp_")
ggseasonplot(ts(trainImputedSj$reanalysis_max_air_temp_k, start = c(1990,18), frequency = 52)) +  theme_classic() + theme(legend.position = "none",plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size = 5)) + ggtitle("Reanalysis_max_air_temp_K")
trainImputedSj %<>%
select(-city,-Year.Week) %>%
select(-one_of(!!HighCorSj)) %>%
select(-ends_with("imp"))
#ccf2(trainImputedSj$total_cases,trainImputedSj$reanalysis_specific_humidity_g_per_kg,max.lag = 15)
#train <- train %>% mutate(index = 1:nrow(.))
colnames(trainImputedSj)
varSeq <- seq(1,15,by = 2)
ctrl <- rfeControl(method = "repeatedcv",
repeats = 5,
verbose = F,
functions = rfFuncs,
allowParallel = T)
rfRFE <- rfe(x = trainImputedSj[,c(-1:-3,-19)],
y = trainImputedSj$total_cases,
sizes = varSeq,
metric = "RMSE",
rfeControl = ctrl,
ntree = 500)
rfRFE
HighCorSj
astsa::acf2(trainImputedSj$total_cases[trainImputedSj$year >= 1996])
fit <- astsa::sarima(trainImputedSj$total_cases,p = 1,d = 1, q = 1)
fit <- astsa::sarima(trainImputedSj$total_cases,p = 1,d = 1, q = 2)
fit <- astsa::sarima(trainImputedSj$total_cases,p = 1,d = 1, q = 3)
auto.arima(tsTrainImputedSj$total_cases[,year > = 1996])
# remove 1996 data for feature selection
astsa::acf2(trainImputedSj$total_cases[trainImputedSj$year >= 1996])
# remove 1996 data for feature selection
auto.arima(trainImputedSj$total_cases[trainImputedSj$year >= 1996])
fit <- astsa::sarima(trainImputedSj$total_cases,p = 1,d = 1, q = 1)
# remove 1996 data for feature selection
auto.arima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],stepwise = F)
astsa::acf2(trainImputedSj$total_cases[trainImputedSj$year >= 1996])
fit <- astsa::sarima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],p = 1,d = 1, q = 1)
fit <- astsa::sarima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],p = 1,d = 1, q = 2)
fit <- astsa::sarima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],p = 1,d = 1, q = 3)
fit <- astsa::sarima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],p = 2,d = 1, q = 3)
# remove 1996 data for feature selection
auto.arima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],stepwise = F)
fit <- astsa::sarima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],p = 1,d = 1, q = 1)
plot(fit$fit$residuals)
acf2(fit$fit$residuals)
fit <- astsa::sarima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],p = 1,d = 1, q = 1)
acf2(fit$fit$residuals)
Box.test(fit$fit$residuals)
fit <- astsa::sarima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],p = 1,d = 1, q = 1)
# remove 1996 data for feature selection
auto.arima(tsTrainImputedSj$total_cases,stepwise = F)
fit <- astsa::sarima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],p = 1,d = 1, q = 5)
# remove 1996 data for feature selection
auto.arima(tsTrainImputedSj$total_cases)
fit <- astsa::sarima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],p = 1,d = 1, q = 1)
auto.arima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],stepwise = F)
astsa::acf2(trainImputedSj$total_cases[trainImputedSj$year >= 1996])
fit <- astsa::sarima(trainImputedSj$total_cases[trainImputedSj$year >= 1996],p = 1,d = 1, q = 1)
