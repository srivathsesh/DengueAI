library(tidyverse)
library(xts)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(forecast)
library(lubridate)
library(xts)
library(astsa)
train <- read_csv("Training.csv")
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = as_date(week_start_date))
library(magrittr)
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = as_date(week_start_date))
train <- read_csv("Training.csv")
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = ymd(week_start_date))
train <- read_csv("Training.csv")
lubridate::parse_date_time(train$week_start_date[1],"%m/%d/%Y")
lubridate::parse_date_time(train$week_start_date[1],"%m/%d/%Y")
mdy(train$week_start_date[1])
train <- read_csv("Training.csv")
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = mdy(week_start_date))
train <- read_csv("Training.csv")
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = mdy(week_start_date),
Month = month(week_start_date))
train <- read_csv("Training.csv")
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = mdy(week_start_date),
Month = month(week_start_date),
TempRange = (reanalysis_max_air_temp_k - reanalysis_min_air_temp_k),
Vegetation = rowSums(ndvi_ne,ndvi_nw,ndvi_se,ndvi_sw,na.rm = T),
)
train <- read_csv("Training.csv")
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = mdy(week_start_date),
Month = month(week_start_date),
TempRange = (reanalysis_max_air_temp_k - reanalysis_min_air_temp_k),
Vegetation = sum(ndvi_ne,ndvi_nw,ndvi_se,ndvi_sw,na.rm = T),
)
matrix(1:9, ncol = 3, byrow = T)
x <- matrix(1:9, ncol = 3, byrow = T)
rowSums(x)
train <- read_csv("Training.csv")
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = mdy(week_start_date),
Month = month(week_start_date),
TempRange = (reanalysis_max_air_temp_k - reanalysis_min_air_temp_k),
Vegetation = rowSums(.[7:10])
)
skim(train)
skim(train,list(hist= F))
skim_with(numeric= list(hist= NULL))
skim(train)
skim_with(numeric= list(hist= NULL),integer = list(hist = NULL))
skim(train)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(magrittr)
library(tidyverse)
library(skimr)
library(forecast)
library(lubridate)
library(xts)
library(astsa)
pandoc::pander(skim(train))
pander::pandoc(skim(train))
pander::pander(skim(train))
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = mdy(week_start_date),
Month = month(week_start_date),
TempRange = (reanalysis_max_air_temp_k - reanalysis_min_air_temp_k),
Vegetation = rowSums(.[7:10])
) %>% select(-Year.Week)
skim_with(numeric= list(hist= NULL),integer = list(hist = NULL))
train <- read_csv("Training.csv")
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = mdy(week_start_date),
Month = month(week_start_date),
TempRange = (reanalysis_max_air_temp_k - reanalysis_min_air_temp_k),
Vegetation = rowSums(.[7:10])
) %>% select(-Year.Week)
skim_with(numeric= list(hist= NULL),integer = list(hist = NULL))
pander::pander(skim(train))
train <- read_csv("Training.csv")
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = mdy(week_start_date),
Month = month(week_start_date),
TempRange = (reanalysis_max_air_temp_k - reanalysis_min_air_temp_k),
Vegetation = rowSums(.[7:10])
) %>% select(-Year.Week) %>%
arrange(city,week_start_date)
skim_with(numeric= list(hist= NULL),integer = list(hist = NULL))
pander::pander(skim(train))
library(caret)
cormat <- train %>% select_if(is.numeric) %>% cor(.)
head(cormat)
cormat <- train %>% select_if(is.numeric) %>% cor(.,na.rm = T)
cormat <- train %>% select_if(is.numeric) %>% filter(complete.cases(.))
cormat <- train %>%
select_if(is.numeric) %>%
filter(complete.cases(.)) %>%
cor(.)
corrplot::corrplot(cormat,method = 'ellipse')
corrplot::corrplot(cormat,method = 'ellipse',tl.cex = 0.6)
corrplot::corrplot(cormat,method = 'ellipse',tl.cex = 0.6,order = "hclust")
corrplot::corrplot(cormat,method = 'ellipse',tl.cex = 0.6,order = "hclust")
caret::findLinearCombos(train)
caret::findCorrelation(cormat)
caret::findCorrelation(cormat,names = T)
caret::findCorrelation(cormat[,-Vegetation],names = T)
cormat %>% findCorrelation(.)
cormat %>% select(-Vegetation)
cormat %>% select(-'Vegetation')
cormat %>% select(Vegetation)
caret::findCorrelation(cormat[,c(-24,-25,-26)],names = T)
caret::findCorrelation(cormat[c(-24,-25,-26),c(-24,-25,-26)],names = T)
caret::findCorrelation(cormat[c(-24,-25,-26),c(-24,-25,-26)])
caret::findCorrelation(cormat[c(-11,-12,-25,-26),c(-11,-12,-25,-26)])
caret::findCorrelation(cormat[c(-11,-12,-25,-26),c(-11,-12,-25,-26)],names = T)
colnames(cormat)[c(11,12,25,26)]
c(1,2,3) %in% c(1,2,3,4,5)
which(colnames(cormat) %in% c("Vegetation", "TempRange", "Month"))
caret:;findCorrelation(cormat[-24:-26,-24:-26])
caret:;findCorrelation(cormat[c(-24,-25-26),c(-24,-25-26)])
caret::findCorrelation(cormat[c(-24,-25-26),c(-24,-25-26)])
caret::findCorrelation(cormat[c(-24,-25-26),c(-24,-25-26)],names = T)
caret::findCorrelation(cormat[c(-24,-25,-26),c(-24,-25,-26)],names = T)
hypRemove <- c("ndvi_ne","ndvi_nw","ndvi_se","ndvi_sw","reanalysis_max_air_temp_k","reanalysis_min_air_temp_k" )
hypRemoveCols <- which(colnames(cormat) %in% hypRemove)
-1*hypRemoveCols
findCorrelation(cormat[-1*hypRemoveCols,-1*hypRemoveCols], names = T)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(magrittr)
library(tidyverse)
library(skimr)
library(forecast)
library(lubridate)
library(xts)
library(astsa)
library(caret)
train <- read_csv("Training.csv")
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = mdy(week_start_date),
Month = month(week_start_date),
TempRange = (reanalysis_max_air_temp_k - reanalysis_min_air_temp_k),
Vegetation = rowSums(.[7:10])
) %>% select(-Year.Week) %>%
arrange(city,week_start_date)
skim_with(numeric= list(hist= NULL),integer = list(hist = NULL))
pander::pander(skim(train))
cormat <- train %>%
select_if(is.numeric) %>%
filter(complete.cases(.)) %>%
cor(.)
corrplot::corrplot(cormat,method = 'ellipse',tl.cex = 0.6,order = "hclust")
install.packages("tsne")
install.packages("Rtsne")
library(Rtsne)
tsne <- Rtsne(train, dims = 2, perplexity = 30, verbose = T, max_iter = 500)
plot(tsne$Y,t ='n')
tsne <- Rtsne(iris, dims = 2, perplexity = 30, verbose = T, max_iter = 500)
tsne <- Rtsne(iris3, dims = 2, perplexity = 30, verbose = T, max_iter = 500)
tsne <- Rtsne(iris3, dims = 2, perplexity = 5, verbose = T, max_iter = 500)
iris3
View(tsne)
plot(tsne)
tsne$Y
plot(tsne$Y)
plot(tsne$Y,col = train$city)
tsne <- Rtsne(train, dims = 2, perplexity = 30, verbose = T, max_iter = 500)
plot(tsne$Y,col = train$city)
tsne <- Rtsne(train, dims = 2, perplexity = 30, verbose = T, max_iter = 5000)
plot(tsne$Y,col = train$city)
tsne <- Rtsne(train, dims = 2, perplexity = 12, verbose = T, max_iter = 5000)
plot(tsne$Y,col = train$city)
plot(tsne$Y,col = train$total_cases)
write_csv(tsne$Y,'tsne.csv')
write_csv(data.frame(tsne$Y),'tsne.csv')
dim(tsne$Y)
complete.cases(train)
sumcomplete.cases(train)
sum(complete.cases(train))
write_csv(data.frame(cbind(train[complete.cases(train),],tsne$Y)),"tesne.csv")
tsne <- Rtsne(train[,-2], dims = 2, perplexity = 12, verbose = T, max_iter = 5000)
plot(tsne$Y,col = train$total_cases)
tsne <- Rtsne(train[,-2], dims = 2, perplexity = 30, verbose = T, max_iter = 1000)
plot(tsne$Y,col = train$total_cases)
plot(tsne$Y,col = train$city)
plot(tsne$Y,col = train$Vegetation)
plot(tsne$Y,col = train$TempRange)
plot(tsne$Y,col = train$weekofyear)
plot(tsne$Y,col = train$Month)
plot(tsne$Y,col = train$year)
write_csv(data.frame(cbind(train[complete.cases(train),],tsne$Y)),"tesne.csv")
install.packages("Amelia")
library(Amelia)
devtools::install_github("hadley/devtools")
library(Amelia)
install.packages("Amelia")
install.packages("Amelia")
install.packages("Amelia")
install.packages("Amelia")
install.packages("Amelia")
compileAttributes()
Rcpp::compileAttributes()
Rcpp::compileAttributes('/private/var/folders/jd/8y09m8r121zc6d9p7dp82f9r0000gn/T/RtmpV9KKlr/downloaded_packages')
Rcpp::compileAttributes('~/private/var/folders/jd/8y09m8r121zc6d9p7dp82f9r0000gn/T/RtmpV9KKlr/downloaded_packages')
Amelia::amelia(iris)
Amelia::missmap(iris)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(magrittr)
library(tidyverse)
library(skimr)
library(forecast)
library(lubridate)
library(xts)
library(astsa)
library(caret)
train <- read_csv("Training.csv")
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = mdy(week_start_date),
Month = month(week_start_date),
TempRange = (reanalysis_max_air_temp_k - reanalysis_min_air_temp_k),
Vegetation = rowSums(.[7:10])
) %>% select(-Year.Week) %>%
arrange(city,week_start_date)
skim_with(numeric= list(hist= NULL),integer = list(hist = NULL))
pander::pander(skim(train))
cormat <- train %>%
select_if(is.numeric) %>%
filter(complete.cases(.)) %>%
cor(.)
corrplot::corrplot(cormat,method = 'ellipse',tl.cex = 0.6,order = "hclust")
Amelia::missmap(train)
Amelia::missmap(train,y.cex = 0.5)
train[796,]
Amelia::missmap(train,y.cex = 0.5)
train[706,]
df <- Amelia::missmap(train,y.cex = 0.5)
train[141,]
Amelia::missmap(train,y.cex = 0.5)
train[700,]
Amelia::missmap(train,y.cex = 0.5)
train[10:16,]
train[is.na(train$ndvi_ne),]
row.names(train)
row.names[train[is.na(train$ndvi_ne),]]
row.names[train[is.na(train$ndvi_ne)]]
row.names[train[is.na(train$ndvi_ne),]]
t
Amelia::missmap(train,y.cex = 0.5)
train[!complete.cases(train),]
View(train[!complete.cases(train),])
train <- read_csv("Training.csv")
# make cit ya factor and week_start_date as a date field
train %<>% mutate(city = as.factor(city),
week_start_date = mdy(week_start_date),
Month = month(week_start_date),
TempRange = (reanalysis_max_air_temp_k - reanalysis_min_air_temp_k),
Vegetation = rowSums(.[7:10])
) %>% select(-Year.Week) %>%
arrange(city,week_start_date)
skim_with(numeric= list(hist= NULL),integer = list(hist = NULL))
pander::pander(skim(train))
Amelia::missmap(train,y.cex = 0.5)
train[700,]
Amelia::missmap(train,y.cex = 0.5)
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5)
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5,horizontal = T)
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5,horizontal = F)
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5,rotate = 90)
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5)
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.3)
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5)
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5,main = "")
install.packages("VIM")
VIM::kNN(train)
train <- read_csv("Training.csv")
df <- VIM::kNN(train)
warnings()
plot(train$ndvi_ne)
plot(df$ndvi_ne)
Amelia::missmap(train,y.cex = 0.5)
Amelia::missmap(train,y.cex = 0.5)
plot(train$ndvi_nw)
plot(df$ndvi_nw)
tsne::tsne(df[,-2,-28:-54])
tsne <- Rtsne::Rtsne(df[,-2,-28:-54],dims = 2, perplexity = 30, max_iter = 5000)
plot(tsne)
plot(tsne$Y)
plot(tsne$Y,col = df$city)
plot(tsne$Y,col = df$Icity)
plot(tsne$Y,col = train$city)
plot(tsne$Y,col = I(train$city))
plot(tsne$Y,col = ifelse(df$Icity ==1 , "red", "black"))
tsne <- Rtsne::Rtsne(df[,-2,-28:-54],dims = 2, perplexity = 8, max_iter = 5000)
plot(tsne$Y,col = ifelse(df$Icity ==1 , "red", "black"))
plot(tsne$Y,col = df$weekofyear)
tsne <- Rtsne::Rtsne(df[,-2,-28:-54],dims = 2, perplexity = 15, max_iter = 5000)
plot(tsne$Y,col = df$weekofyear)
plot(tsne$Y,col = ifelse(df$Icity ==1 , "red", "black"))
tsne <- Rtsne::Rtsne(df[,-2,-28:-54],dims = 3, perplexity = 20, max_iter = 5000)
plot(tsne$Y,col = ifelse(df$Icity ==1 , "red", "black"))
head(tsne$Y)
plot(tsne$Y[,2],tsne$Y[,3],col = ifelse(df$Icity ==1 , "red", "black"))
plot(tsne$Y[,1],tsne$Y[,3],col = ifelse(df$Icity ==1 , "red", "black"))
plot(tsne$Y[,1],tsne$Y[,3],col = df$year)
plot(tsne$Y[,1],tsne$Y[,3],col = df$reanalysis_avg_temp_k)
plot(tsne$Y,col = df$total_cases)
plot(tsne$Y[,1],tsne$Y[,3],col = df$total_cases)
tsne <- Rtsne::Rtsne(df[,-6,-2,-28:-54],dims = 3, perplexity = 30, max_iter = 5000,verbose = T)
tsne <- Rtsne::Rtsne(df[,c(-6,-2,-28:-54)],dims = 3, perplexity = 30, max_iter = 5000,verbose = T)
plot(tsne$Y[,1],tsne$Y[,3],col = df$total_cases)
plot(tsne$Y[,1],tsne$Y[,2],col = df$total_cases)
plot(tsne$Y[,3],tsne$Y[,2],col = df$total_cases)
plot(tsne$Y[,1],tsne$Y[,3],col = ifelse(df$Icity ==1 , "red", "black"))
plot(tsne$Y[,2],tsne$Y[,3],col = ifelse(df$Icity ==1 , "red", "black"))
plot(tsne$Y[,2],tsne$Y[,1],col = ifelse(df$Icity ==1 , "red", "black"))
plot(train$station_diur_temp_rng_c)
plot(df$station_diur_temp_rng_c)
train <- read_csv("Training.csv")
# Show missing values
Amelia::missmap(train,y.cex = 0.5)
Amelia::missmap(train,y.cex = 0.5)
# Impute data
trainImputed  <- VIM::kNN(train)
# Check imputation
plot(trainImputed$ndvi_ne,col = trainImputed$ndvi_ne_imp)
# Check imputation
plot(trainImputed$ndvi_ne,col = ifelse(trainImputed$ndvi_ne_imp, col = "red", "black"))
# Check imputation
plot(trainImputed$ndvi_ne, col = ifelse(trainImputed$ndvi_ne_imp, col = "red", "black"))
# Check imputation
plot(trainImputed$ndvi_ne, col = ifelse(trainImputed$ndvi_ne_imp, "red", "black"))
par(mfrow = c(1,2))
plot(trainImputed$ndvi_ne, col = ifelse(trainImputed$ndvi_ne_imp, "red", "black"))
plot(trainImputed$ndvi_nw, col = ifelse(trainImputed$ndvi_nw_imp,"red","black"))
plot(trainImputed$ndvi_ne, col = ifelse(trainImputed$ndvi_ne_imp, "red", "black"),cex = 0.6)
plot(trainImputed$ndvi_nw, col = ifelse(trainImputed$ndvi_nw_imp,"red","black"),cex = 0.6)
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5)
plot(trainImputed$station_diur_temp_rng_c, col = ifelse(trainImputed$station_diur_temp_rng_c_imp,"red","black"),cex = 0.6)
plot(trainImputed$station_diur_temp_rng_c, col = ifelse(trainImputed$station_diur_temp_rng_c_imp,"red","black"),cex = 0.6,type = "b")
plot(trainImputed$station_diur_temp_rng_c, col = ifelse(trainImputed$station_diur_temp_rng_c_imp,"red","black"),cex = 0.6,type = "l")
plot(trainImputed$station_diur_temp_rng_c, col = ifelse(trainImputed$station_diur_temp_rng_c_imp,"red","black"),cex = 0.6,type = "b")
test <- read_csv("DengAI_Predicting_Disease_Spread_-_Test_Data_Features.csv")
colnames(test)
# Impute data
trainImputed  <- VIM::kNN(train[,colnames(test)])
plot(trainImputed$ndvi_ne, col = ifelse(trainImputed$ndvi_ne_imp, "red", "black"),cex = 0.6)
plot(trainImputed$ndvi_nw, col = ifelse(trainImputed$ndvi_nw_imp,"red","black"),cex = 0.6)
plot(trainImputed$station_diur_temp_rng_c, col = ifelse(trainImputed$station_diur_temp_rng_c_imp,"red","black"),cex = 0.6,type = "b")
# Impute data
trainImputed  <- VIM::kNN(train)
plot(trainImputed$station_diur_temp_rng_c, col = ifelse(trainImputed$station_diur_temp_rng_c_imp,"red","black"),cex = 0.6,type = "b")
Amelia::missmap(train,y.cex = 0.5,x.cex = 0.5)
